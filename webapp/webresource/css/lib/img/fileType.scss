@charset "UTF-8";


// 파일 확장자 
// 괄호 친 것은 하나의 이미지를 여러개의 파일명에 매칭
$file-type-list: (
default,
(zip, alz, arj, egg, lzh, rar, zoo),
pdf,
(xls, xlt, xlsx),
txt,
ai,
eps,
hwp,
(jpg, png, gif),
(pptx)
);

$className: "img-icons-file-";

[class*='#{$className}'] {
  display: inline-block;
  
  vertical-align: middle;
  border: 0;
  background-image: url('/img/img-icons-file.png');
  background-repeat: no-repeat;
}

@mixin icons-position($sizeName, $name, $width, $height, $x, $y) {

  .#{$className}#{$sizeName}.#{$name} {
    width: $width;
    height: $height;
    
    
    background-position: $x $y;
  }

}

// 아이콘이 가로로 나열되며, 여러줄이 있을 수 있다고 전제한다.
//$width, $height : 이미지 사이즈
//$startPos : 이미지가 시작하는 위치
//$lineLimitNum : 아이콘이 여러줄로 되어 있을 경우 갯수를 쓰면 된다.
@mixin icons-file($sizeName, $width, $height, $startX, $startY, $lineLimitNum) {
  
  $i: 0;
  $line: 0;
  $x: 0;
  $y: 0;

  @each $name in $file-type-list {
        
    // 라인 마지막이면
    @if( ($i != 0 and $i % $lineLimitNum) == 0) {
      $line: $line + 1;
      $i: 0;            // 가로 오프셋 초기화
    }
    
    // 오프셋 조정
    $x: ($startX + ($width * $i) ) * -1;
    $y: ($startY + ($height * $line) ) * -1;
      
    // default값을 골라내기 위해서 default검사를 한다.
    @if($name != "default") {
      @each $value in $name {
        @include icons-position($sizeName, $value, $width, $height, $x, $y);
      }
    }
    // 디폴트 값 설정
    @else {
      .#{$className}#{$sizeName} {
        width: $width;
        height: $height;
        background-position: $x $y;
      }
    }
    // 루프변수 갱신
    $i: $i + 1;
  }
    
} // @mixin icons-file()


@include icons-file("l", 30px, 30px, 0, 0, 100);
@include icons-file("s", 18px, 18px, 0, 30px, 100);
