@charset "UTF-8";

/*
 * tooltip
 * 3종류가 있다. tooltip-  hover(마우스오버시) / active(클릭시) / focus(포커스 시)
 * 
 * 1) tooltip-{값}이나 그 하위 엘리먼트는, tooltip-target클래스를 가질 수 있다.
 *    tooltip-target는 css 이벤트를 Listener하는 대상이 된다.
 *   이벤트 리스너는 툴팁을 감싸는 부모엘리먼트가 될수도 있고, 하위의 다른 자식 엘리먼트가 될수도 있다.
 *    자식 엘리먼트가 target이 될 경우, 툴팁 엘리먼트는 자식엘리먼트 바로 뒤에 위치해야 한다. 
 * 
 * 2) tooltip-content는 이벤트 발생시, 나타날 툴팁 엘리먼트다.
 * 
 *  
 */
@mixin tooltip($eventType) {
  
  &-#{$eventType} {
    
    position: relative;
    
    // 상위 얼리먼트의 값을 상속받기 위한 설정
    &.tooltip-static {
      position: static;
    }
    
    .tooltip-content {
      display: none;
    }
    
    // tooltip-fixed를 붙이면 사라지지 않는다.
    .tooltip-fixed {
      &:hover, &:focus {
        @extend %blocks;
      }
    }
    // tooltip-* 엘리먼트 자신이 target
    &.tooltip-target:#{$eventType}, &.tooltip-target.active {
      // 자식 및 후손 엘리먼트 중 target을 가진 엘리먼트가 열린다.
      &.tooltip-content, .tooltip-content {
        @extend %blocks;
      }
    }
    
    // tooltip-* 자식 엘리먼트가 target
    .tooltip-target:#{$eventType}, &.tooltip-target.active {
      // 후손 엘리먼트 content
      .tooltip-content {
        @extend %blocks;
      }
      // 자식 엘리먼트의 형제 엘리먼트 content
      &~.tooltip-content {
        @extend %blocks;
      }
    }
  }
}

/*
 * 엘리먼트 바로 뒤에 있는 엘리먼트를 감춰두었다가, 마우스오버시에만 나타나게 한다. 
 */
.tooltip {
  
  //Mouse over
  @include tooltip("hover");
  //Mouse focus
  @include tooltip("active");
  
  @include tooltip("focus");
  
}

.tooltip-focus {
  .tooltip-target {
    cursor: pointer;
    .tooltip-content {
      cursor: default;
    }
  }
}
